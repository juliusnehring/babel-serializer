// CAUTION: this file is auto-generated. DO NOT MODIFY!
#include "x64.hh"
#include "x64.gen.hh"

static char const* s_mnemonic_names[] = {
    "<invalid-mnemonic>",
    "<unresolved-mnemonic>",
    "adc",
    "add",
    "addpd",
    "addps",
    "addsd",
    "addss",
    "addsubpd",
    "addsubps",
    "and",
    "andnpd",
    "andnps",
    "andpd",
    "andps",
    "blendpd",
    "blendps",
    "bsf",
    "bsr",
    "bswap",
    "bt",
    "btc",
    "btr",
    "bts",
    "call",
    "cbw",
    "clc",
    "cld",
    "cli",
    "cmc",
    "cmovb",
    "cmovbe",
    "cmovl",
    "cmovle",
    "cmovnb",
    "cmovnbe",
    "cmovnl",
    "cmovnle",
    "cmovno",
    "cmovnp",
    "cmovns",
    "cmovnz",
    "cmovo",
    "cmovp",
    "cmovs",
    "cmovz",
    "cmp",
    "cmppd",
    "cmpps",
    "cmps",
    "cmpsd",
    "cmpss",
    "cmpxchg",
    "cmpxchg8b",
    "comisd",
    "comiss",
    "cpuid",
    "cvtdq2pd",
    "cvtdq2ps",
    "cvtpd2dq",
    "cvtpd2pi",
    "cvtpd2ps",
    "cvtpi2pd",
    "cvtpi2ps",
    "cvtps2dq",
    "cvtps2pd",
    "cvtps2pi",
    "cvtsd2si",
    "cvtsd2ss",
    "cvtsi2sd",
    "cvtsi2ss",
    "cvtss2sd",
    "cvtss2si",
    "cvttpd2dq",
    "cvttpd2pi",
    "cvttps2dq",
    "cvttps2pi",
    "cvttsd2si",
    "cvttss2si",
    "cwd",
    "dec",
    "div",
    "divpd",
    "divps",
    "divsd",
    "divss",
    "dppd",
    "dpps",
    "emms",
    "enter",
    "extractps",
    "f2xm1",
    "fabs",
    "fchs",
    "fclex",
    "fcom",
    "fcomi",
    "fcos",
    "fdecstp",
    "fdisi",
    "feni",
    "fincstp",
    "finit",
    "fldcw",
    "fldenv",
    "fnclex",
    "fndisi",
    "fneni",
    "fninit",
    "fnop",
    "fnsave",
    "fnsetpm",
    "fnstcw",
    "fnstenv",
    "fnstsw",
    "fprem",
    "fprem1",
    "frndint",
    "fsave",
    "fscale",
    "fsetpm",
    "fsin",
    "fsqrt",
    "fstcw",
    "fstenv",
    "fstsw",
    "ftst",
    "fucom",
    "fwait",
    "fxam",
    "fxch",
    "fxrstor",
    "fxsave",
    "getsec",
    "haddpd",
    "haddps",
    "hint_nop",
    "hsubpd",
    "hsubps",
    "idiv",
    "imul",
    "in",
    "inc",
    "ins",
    "insertps",
    "int",
    "int1",
    "into",
    "iret",
    "ja",
    "jae",
    "jb",
    "jbe",
    "je",
    "jecxz",
    "jg",
    "jge",
    "jl",
    "jle",
    "jmp",
    "jmpe",
    "jne",
    "jno",
    "jns",
    "jo",
    "jpe",
    "jpo",
    "js",
    "lahf",
    "lddqu",
    "lea",
    "leave",
    "lfs",
    "lgs",
    "lods",
    "loop",
    "loopnz",
    "loopz",
    "lss",
    "maskmovdqu",
    "maskmovq",
    "maxpd",
    "maxps",
    "maxsd",
    "maxss",
    "minpd",
    "minps",
    "minsd",
    "minss",
    "mov",
    "movapd",
    "movaps",
    "movd",
    "movddup",
    "movdq2q",
    "movdqa",
    "movdqu",
    "movhpd",
    "movhps",
    "movlpd",
    "movlps",
    "movmskpd",
    "movmskps",
    "movntdq",
    "movnti",
    "movntpd",
    "movntps",
    "movntq",
    "movq",
    "movq2dq",
    "movs",
    "movsd",
    "movshdup",
    "movsldup",
    "movss",
    "movsx",
    "movsxd",
    "movupd",
    "movups",
    "movzx",
    "mpsadbw",
    "mul",
    "mulpd",
    "mulps",
    "mulsd",
    "mulss",
    "neg",
    "nop",
    "not",
    "or",
    "orpd",
    "orps",
    "out",
    "outs",
    "packssdw",
    "packsswb",
    "packuswb",
    "paddb",
    "paddd",
    "paddq",
    "paddsb",
    "paddsw",
    "paddusb",
    "paddusw",
    "paddw",
    "palignr",
    "pand",
    "pandn",
    "pause",
    "pavgb",
    "pavgw",
    "pblendw",
    "pcmpeqb",
    "pcmpeqd",
    "pcmpeqw",
    "pcmpestri",
    "pcmpestrm",
    "pcmpgtb",
    "pcmpgtd",
    "pcmpgtw",
    "pcmpistri",
    "pcmpistrm",
    "pextrb",
    "pextrd",
    "pextrw",
    "pinsrb",
    "pinsrd",
    "pinsrw",
    "pmaddwd",
    "pmaxsw",
    "pmaxub",
    "pminsw",
    "pminub",
    "pmovmskb",
    "pmulhuw",
    "pmulhw",
    "pmullw",
    "pmuludq",
    "pop",
    "popcnt",
    "popf",
    "por",
    "prefetchnta",
    "prefetcht0",
    "prefetcht1",
    "prefetcht2",
    "psadbw",
    "pshufd",
    "pshufhw",
    "pshuflw",
    "pshufw",
    "pslld",
    "pslldq",
    "psllq",
    "psllw",
    "psrad",
    "psraw",
    "psrld",
    "psrldq",
    "psrlq",
    "psrlw",
    "psubb",
    "psubd",
    "psubq",
    "psubsb",
    "psubsw",
    "psubusb",
    "psubusw",
    "psubw",
    "punpckhbw",
    "punpckhdq",
    "punpckhqdq",
    "punpckhwd",
    "punpcklbw",
    "punpckldq",
    "punpcklqdq",
    "punpcklwd",
    "push",
    "pushf",
    "pxor",
    "rcl",
    "rcpps",
    "rcpss",
    "rcr",
    "rdpmc",
    "rdtsc",
    "repnz",
    "repz",
    "retf",
    "retn",
    "rol",
    "ror",
    "roundpd",
    "roundps",
    "roundsd",
    "roundss",
    "rsqrtps",
    "rsqrtss",
    "sahf",
    "sal",
    "sar",
    "sbb",
    "scas",
    "setb",
    "setbe",
    "setl",
    "setle",
    "setnb",
    "setnbe",
    "setnl",
    "setnle",
    "setno",
    "setnp",
    "setns",
    "setnz",
    "seto",
    "setp",
    "sets",
    "setz",
    "shld",
    "shr",
    "shrd",
    "shufpd",
    "shufps",
    "sqrtpd",
    "sqrtps",
    "sqrtsd",
    "sqrtss",
    "stc",
    "std",
    "sti",
    "stos",
    "sub",
    "subpd",
    "subps",
    "subsd",
    "subss",
    "syscall",
    "sysenter",
    "test",
    "ucomisd",
    "ucomiss",
    "ud",
    "ud2",
    "unpckhpd",
    "unpckhps",
    "unpcklpd",
    "unpcklps",
    "xadd",
    "xchg",
    "xlat",
    "xor",
    "xorpd",
    "xorps",
    "xsave",
};

char const* babel::x64::to_string(mnemonic m)
{
    if (m > mnemonic::xsave)
        return "<unknown-mnemonic>";
    return s_mnemonic_names[int(m)];
}

uint16_t const babel::x64::detail::decode_table[793] =
{
10243,10243,9219,9219,3075,5123,0,0,10469,10469,9445,9445,3301,5349,0,0,
10242,10242,9218,9218,3074,5122,0,0,10581,10581,9557,9557,3413,5461,0,0,
10250,10250,9226,9226,3082,5130,0,0,10612,10612,9588,9588,3444,5492,0,0,
10631,10631,9607,9607,3463,5511,0,0,10286,10286,9262,9262,3118,5166,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
2365,2365,2365,2365,2365,2365,2365,2365,2326,2326,2326,2326,2326,2326,2326,2326,
0,0,0,9432,0,0,0,0,5437,12428,3389,11404,143,0,233,0,
3236,3234,3223,3222,3225,3233,3224,3221,3239,3235,3237,3238,3229,3228,3230,3227,
1,1,0,1,10619,10619,9605,9605,10429,10429,9405,9405,10429,9386,9405,8470,
1,1413,1413,1413,1413,1413,1413,1413,25,79,0,128,318,280,338,168,
3261,6333,3261,6333,210,210,49,49,3451,5499,371,371,174,174,342,342,
3261,3261,3261,3261,3261,3261,3261,3261,6333,6333,6333,6333,6333,6333,6333,6333,
1,1,4425,329,0,0,14525,15549,0,171,4424,328,145,3217,147,148,
1,1,1,1,0,0,0,0,95,0,0,0,0,1,0,114,
3248,3249,3247,3226,3213,3213,3304,3304,5144,5279,0,3231,141,141,232,232,
0,146,326,327,0,29,1,1,26,368,28,370,27,369,1,1,
160,0,0,0,0,377,0,0,0,0,0,383,0,8419,0,0,
1,1,1,1,1,1,1,1,1,8328,8328,8328,8328,8328,8328,1,
0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,
0,325,0,324,378,0,0,133,0,0,1,0,0,0,0,0,
9258,9254,9246,9250,9261,9257,9247,9251,9260,9256,9259,9255,9248,9252,9249,9253,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
9529,9532,9530,9451,9473,9475,9474,9452,9525,9528,9526,9450,9531,9527,9408,1,
1,1,1,1,9468,9470,9469,88,0,0,0,0,1,1,10432,1,
5284,5282,5271,5270,5273,5281,5272,5269,5287,5283,5285,5286,5277,5276,5278,5275,
8547,8543,8535,8539,8550,8546,8536,8540,8549,8545,8548,8544,8537,8541,8538,8542,
0,0,56,10260,13671,10599,0,0,0,0,0,10263,13673,10601,1,9356,
10292,10292,9394,10262,9388,9389,9435,9435,1,9598,1,10261,9233,9234,9431,9431,
10628,10628,1,10444,11531,11528,1,8245,1043,1043,1043,1043,1043,1043,1043,1043,
1,9516,9513,9515,9455,9492,1,9489,9522,9523,9488,9462,9458,9459,9486,9463,
9465,9512,9511,9466,9490,9491,1,1,9520,9521,9487,9497,9456,9457,9485,9535,
9385,9510,9507,9509,9493,9484,9502,1,9517,9524,9518,9519,9453,9460,9454,0,
11519,11520,11524,11525,14635,8216,0,8351,14629,8509,9434,9427,9430,14634,10458,10451,
10454,14628,9433,10440,9603,9601,10457,10438,8334,8272,9407,10439,9602,9600,10431,10437,
9302,9303,9406,11484,10446,9597,10430,9279,9285,9286,8419,8328,10445,9596,9271,9278,
9292,9293,9294,9282,9283,9288,9270,9418,9290,0,9230,9276,9581,9582,9583,9417,
11408,11529,9229,11530,9580,9228,9447,9609,9221,9222,9223,0,0,9227,9446,9608,
9220,9439,9440,9441,9281,9284,9287,0,9274,9438,9291,11627,9277,9590,9591,9592,
9280,0,1413,11626,248,9589,9461,9351,11596,11597,11598,11599,11279,11280,9350,11515,
9402,9403,9404,0,13576,13574,13402,13575,9401,9299,9300,9301,9398,9399,9400,0,
9424,9298,9412,0,9397,11554,11553,11552,9411,10448,10447,10436,9396,11551,11312,11314,
11315,10435,10443,9552,9395,9553,11311,14339,14565,14338,14677,14346,14708,14727,14382,15363,
15589,15362,15701,15370,15732,15751,15406,14339,14565,14338,14677,14346,14708,14727,14382,14666,
14667,14656,14659,14675,14696,0,14676,14666,14667,14656,14659,14675,14696,0,14676,8522,
8523,8512,8515,8531,8552,0,8532,8522,8523,8512,8515,8531,8552,0,8532,8522,
8523,8512,8515,8531,8552,0,8532,8522,8523,8512,8515,8531,8552,14715,8532,8420,
8418,8413,8332,8273,8331,16763,0,8420,8418,8413,8332,8273,8331,9409,9429,9354,
9225,9410,9425,0,9415,9428,9353,9224,10448,9275,9273,9413,127,0,8302,8306,
9289,8474,8475,8476,8477,8328,14636,14633,14632,14631,14630,14627,8324,8323,0,0,
8586,14356,14359,14358,14357,9537,160,9538,9495,
};

